function remap() {
        hidutil property --set '{"UserKeyMapping":[{"HIDKeyboardModifierMappingSrc":0x700000064,"HIDKeyboardModifierMappingDst":0x700000035},{"HIDKeyboardModifierMappingSrc":0x700000035,"HIDKeyboardModifierMappingDst":0x700000064}]}'
}

function showmap() {
        hidutil property --get "UserKeyMapping"
}

function unmap() {
        hidutil property --set '{"UserKeyMapping":[]}'
}

function gdl() {
	ID=""
	INPUT=$(pbpaste)
	APIKEY=$(cat ~/.google-api-key)
	if [ ! -z "$1" ]
	then
		ID="n=$1&"
	fi
	TRAILING=${INPUT#https://drive.google.com/file/d/}
	FILEID=${TRAILING%/*}
	if [[ $FILEID =~ ^[A-Za-z0-9_-]*$ ]]
	then
		URL="https://www.googleapis.com/drive/v3/files/$FILEID?${ID}alt=media&key=$APIKEY"
		echo $URL | pbcopy
		echo "URL copied to clipboard"
	else
		echo "Failed to extract FileID (got: $FILEID)"
	fi
}

function x() {
	echo $(pbpaste | tr -d '\n\\') | pbcopy 
	echo Your clipboard contains:
	echo
	pbpaste
}

function gco() {
	local FIRST=0
	while [[ $1 =~ ^- ]]
	do
		case $1 in
			--first)
				FIRST=1
				;;
			-f)
				FIRST=1
				;;
			*)
				echo Unrecognized option $1
				exit 1
		esac
		shift
	done

	MATCHES=$(git branch --remote | grep -w "$*" | awk 'END {print NR}')
	case ${MATCHES} in
	0)
		echo No branch matched for "\"$*\"", available branches are:
		git branch --remote
		false
		;;
	1)
		git checkout $(git branch --remote | grep -w "$*" | sed 's/^\s*origin\///')
		;;
	*)
		echo Multiple branches matched for "\"$*\"":
		git branch --remote | grep -w "$*"
		if [[ ${FIRST} == 1 ]]
		then
			echo "Checking out the first hit"
			git checkout $(git branch --remote | grep -w "$*" | head -1 | sed 's/^\s*origin\///')
		else
			echo "Re-run with --first (-f) if you wish to check out the first hit"
			false
		fi
		;;
	esac
}

function c() {
	if [ -z "$*" ]
	then
		code .
	else
		z "$*" && code .
	fi
}